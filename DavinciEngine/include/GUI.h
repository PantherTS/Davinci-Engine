#ifndef GUI_H
#define GUI_H
#include "SDL/SDL.h"
#include "Input.h"
#include "UIControl.h"
#include "Button.h"
#include <map>

namespace DavinciEngine{

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary> The graphical user interface. </summary>
	////////////////////////////////////////////////////////////////////////////////////////////////////
	class GUI
	{
	public:

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary> Gets the instance.</summary>
		///
		/// <returns> null if it fails, else the instance.</returns>
		////////////////////////////////////////////////////////////////////////////////////////////////////
		static GUI *GetInstance();

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary> Destroys this object.</summary>
		////////////////////////////////////////////////////////////////////////////////////////////////////
		void Destroy();

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary> Executes the exit action.</summary>
		////////////////////////////////////////////////////////////////////////////////////////////////////
		void OnExit();

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary> Graphical user interface render.</summary>
		////////////////////////////////////////////////////////////////////////////////////////////////////
		void GUI_Render( void );

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary> Graphical user interface grab textures.</summary>
		////////////////////////////////////////////////////////////////////////////////////////////////////
		void GUI_GrabTextures( void );

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary> Graphical user interface restore textures.</summary>
		////////////////////////////////////////////////////////////////////////////////////////////////////
		void GUI_RestoreTextures( void );

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary> Graphical user interface set display size.</summary>
		///
		/// <param name="width">  The width.</param>
		/// <param name="height"> The height.</param>
		////////////////////////////////////////////////////////////////////////////////////////////////////
		void GUI_SetDisplaySize( int width, int height );

	private:

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary> Default constructor.</summary>
		////////////////////////////////////////////////////////////////////////////////////////////////////
		GUI();

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary> Destructor.</summary>
		////////////////////////////////////////////////////////////////////////////////////////////////////
		~GUI() {}

		/// <summary> Pointer to the graphical user interface singleton </summary>
		static GUI *m_GUI;

		/// <summary> Pointer to the input object paired with the GUI </summary>
		Input *m_pInput;

		Button* temp;
	};
};
#endif