#ifndef GRAPHIC_H
#define GRAPHIC_H

#include "gl/glew.h"
#include "Vec2D.h"
#include "SDL/SDL.h"

namespace DavinciEngine{
	
	class Object;
	class TextureAsset;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary> Values that represent BlendType. </summary>
	////////////////////////////////////////////////////////////////////////////////////////////////////
	enum BlendType
	{
		BLEND_NONE=0,
		BLEND_ALPHA,
		BLEND_ADDITIVE,
		BLEND_MULTIPLY,
	};

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary> The Graphic object is an OpenGL renderable object that can be assigned
	/// 		  to any object that has an assigned texture.  </summary>
	////////////////////////////////////////////////////////////////////////////////////////////////////
	class Graphic
	{
	public:

		/// <summary> The position of the Graphic </summary>
		Vec2D position;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary> Renders the object.</summary>
		///
		////////////////////////////////////////////////////////////////////////////////////////////////////
		virtual void Render()=0;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary> Gets the width and height of the Graphic.</summary>
		///
		/// <param name="width">  [in,out] If non-null, the width.</param>
		/// <param name="height"> [in,out] If non-null, the height.</param>
		////////////////////////////////////////////////////////////////////////////////////////////////////
		virtual void GetWidthHeight(int *width, int *height)=0;
	};

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary> Open GL wrapper class. </summary>
	////////////////////////////////////////////////////////////////////////////////////////////////////
	class OpenGLFunctions{
	public:
		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary> Sets the texture's blending method for drawing.  Refer to BlendType ENUM for choices. </summary>
		////////////////////////////////////////////////////////////////////////////////////////////////////
		static void SetBlend(BlendType blend);

		static void MakeQuad(float width, float height, const Vec2D &textureOffset=Vec2D::zero, const Vec2D &textureScale=Vec2D::one, const Vec2D &position=Vec2D::zero);

	private:
		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary> Default constructor.</summary>
		////////////////////////////////////////////////////////////////////////////////////////////////////
		OpenGLFunctions();

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary> Destructor.</summary>
		////////////////////////////////////////////////////////////////////////////////////////////////////
		~OpenGLFunctions();
	};
};
#endif